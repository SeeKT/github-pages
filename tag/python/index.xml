<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python | 立ち話</title>
    <link>https://tachibana-ai.netlify.app/tag/python/</link>
      <atom:link href="https://tachibana-ai.netlify.app/tag/python/index.xml" rel="self" type="application/rss+xml" />
    <description>Python</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ja-jp</language><copyright>@SeeKT</copyright><lastBuildDate>Sat, 28 Aug 2021 17:11:39 +0900</lastBuildDate>
    <image>
      <url>https://tachibana-ai.netlify.app/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Python</title>
      <link>https://tachibana-ai.netlify.app/tag/python/</link>
    </image>
    
    <item>
      <title>力学系の分岐現象: いろいろな力学系</title>
      <link>https://tachibana-ai.netlify.app/post/nonlinear_bifurcation_example/</link>
      <pubDate>Sat, 28 Aug 2021 17:11:39 +0900</pubDate>
      <guid>https://tachibana-ai.netlify.app/post/nonlinear_bifurcation_example/</guid>
      <description>&lt;h3 id=&#34;0-はじめに&#34;&gt;0. はじめに&lt;/h3&gt;
&lt;p&gt;この記事では，文献&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;の第3章の内容を簡単にまとめた．&lt;/p&gt;
&lt;h5 id=&#34;目次&#34;&gt;目次&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#section1&#34;&gt;物体の落下&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#section2&#34;&gt;単振動&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#section3&#34;&gt;ダフィング方程式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#section4&#34;&gt;二重振り子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5 &lt;a href=&#34;#section5&#34;&gt;1階微分方程式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6 &lt;a href=&#34;#section6&#34;&gt;2階微分方程式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;7 &lt;a href=&#34;#section7&#34;&gt;ストレンジアトラクタ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;8 &lt;a href=&#34;#section8&#34;&gt;まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-a-namesection1物体の落下a&#34;&gt;1. &lt;a name=&#34;section1&#34;&gt;物体の落下&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;原点 $O$ から鉛直上向きに $x$ 軸を取り，高さ $x_0$ の点から初速度 $v_0$ で投げ上げた質量 $m$ の物体の運動を考える．&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;空気抵抗を無視した場合
$$
m \frac{d^2x}{dt^2} = -mg \tag{3.1}
$$
$\rightsquigarrow$ $dx/dt = v$とおくと，
$$
\begin{cases}
\frac{dx}{dt} = v \\ \frac{dv}{dt} = -g
\end{cases} \tag{3.2}
$$
$\rightsquigarrow$ 2次元自律ベクトル場．時刻 $t = 0$ のとき，$x = x_0, v = v_0$ を通る軌道は，
$$
\begin{cases}
x(t) = \frac{1}{2}gt^2 + v_0t + x_0 \\ v(t) = -gt + v_0
\end{cases} \tag{3.3}
$$
で与えられる．
















&lt;figure  id=&#34;figure-空気抵抗がないときのベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.1_nonresistance_vector_field.svg&#34; alt=&#34;fig1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗がないときのベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-空気抵抗がないときの流れ&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.1_nonresistance_flow.svg&#34; alt=&#34;fig2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗がないときの流れ
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;速度に比例する空気抵抗がある場合 (比例定数: $\gamma$)
$$
\begin{cases}
\frac{dx}{dt} = v \\ \frac{dv}{dt} = -g - \gamma v
\end{cases} \tag{3.4}
$$
である．
















&lt;figure  id=&#34;figure-空気抵抗があるときのベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.1_resistance_vector_field.svg&#34; alt=&#34;fig3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗があるときのベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-空気抵抗があるときの流れ&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.1_resistance_flow.svg&#34; alt=&#34;fig4&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗があるときの流れ
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-a-namesection2単振動a&#34;&gt;2. &lt;a name=&#34;section2&#34;&gt;単振動&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;質点の運動が一直線上にあり，加速度が常にその直線上の一定点に向かい，大きさがその定点からの距離に比例している運動．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$L$: バネの自然長，$m$: おもりの質量，$O$: 原点(固定端)，$k$: ばね定数&lt;/li&gt;
&lt;li&gt;$L_0$: おもりに働く重力とばねの変形がつりあう位置
$$
k(L_0 - L) = mg \tag{3.5}
$$&lt;/li&gt;
&lt;li&gt;$y$: $L_0$からの変位
$$
y = x - L_0 \tag{3.6}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;バネの質量が無視でき，空気抵抗などによる減衰がないとき
$$
m \frac{d^2 x}{dt^2} = -k(x - L) + mg \tag{3.7}
$$
$$
\Longleftrightarrow m \frac{d^2y}{dt^2} = -ky \tag{3.8}
$$
$$
\Longleftrightarrow \begin{cases}
\frac{dy}{dt} = v \\ \frac{dv}{dt} = - \frac{k}{m}y
\end{cases} \tag{3.9}
$$
$\rightsquigarrow$ 2次元自律系．ODEの一般解は，
$$
y = a \sin(\omega_0 t + \alpha), \ \omega_0 = \frac{k}{m}. \tag{3.10}
$$
ただし，$a, \alpha$ は任意定数．時刻 $t = 0$ で $y = y_0, v = v_0$ を通る解の場合，$a, \alpha$ は，
$$
\begin{cases}
y_0 = a \sin \alpha \\ v_0 = \frac{ak}{m} \cos \alpha
\end{cases} \tag{3.11}
$$
から定まる．
















&lt;figure  id=&#34;figure-空気抵抗がないときのベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.2_nonresistance_vector_field.svg&#34; alt=&#34;fig5&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗がないときのベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-空気抵抗がないときの流れ&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.2_nonresistance_flow.svg&#34; alt=&#34;fig6&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗がないときの流れ
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;速さに比例する抵抗力 (粘性抵抗) が働く場合 ($c$: 比例定数)
$$
m \frac{d^2y}{dt^2} = -ky - c \frac{dy}{dt} \tag{3.12}
$$
$$
\Longleftrightarrow \begin{cases}
\frac{dy}{dt} = v \\ \frac{dv}{dt} = -\frac{k}{m}y - \frac{c}{m}v
\end{cases} \tag{3.13}
$$
















&lt;figure  id=&#34;figure-空気抵抗があるときのベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.2_resistance_vector_field.svg&#34; alt=&#34;fig7&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗があるときのベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-空気抵抗があるときの流れ&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.2_resistance_flow.svg&#34; alt=&#34;fig8&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      空気抵抗があるときの流れ
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;おもりに鉛直方向の周期的外力が働く場合．周期的外力が
$$
F_{\mathrm{ex}} = B \sin \Omega t \tag{3.14}
$$
で与えられる場合，運動方程式は，
$$
m \frac{d^2y}{dt^2} = -ky + B \sin \Omega t \tag{3.15}
$$
$$
\Longleftrightarrow \begin{cases}
\frac{dy}{dt} = v \\ \frac{dv}{dt} = - \frac{k}{m}y + \frac{B}{m} \sin \Omega t
\end{cases} \tag{3.16}
$$
$\rightsquigarrow$ 2次元の非自律系ベクトル場．
















&lt;figure  id=&#34;figure-外力が働くときの軌道-拡大相空間&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.2_withforce_flow.svg&#34; alt=&#34;fig9&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      外力が働くときの軌道 (拡大相空間)
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-外力が働くときの軌道&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.2_withforce_flow_2d.svg&#34; alt=&#34;fig10&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      外力が働くときの軌道
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;鉛直方向の周期的外力に加え，さらに粘性抵抗も働く場合．
$$
m \frac{d^2y}{dt^2} = -ky - c \frac{dy}{dt} + B \sin \Omega t \tag{3.17}
$$
$$
\Longleftrightarrow \begin{cases}
\frac{dy}{dt} = v \\ \frac{dv}{dt} = - \frac{k}{m}y - \frac{c}{m}v + \frac{B}{m} \sin \Omega t
\end{cases} \tag{3.18}
$$&lt;/li&gt;
&lt;li&gt;質点に直接外力は作用しないが，振動系の支台に周期的に変わる変位が加わる場合．ばねを支持する台が上下に
$$
x_1 = B \sin \Omega t \tag{3.19}
$$
で振動するとする．ただし，$y$ はおもりのつりあいの位置からの変位であるので，$y - x_1$ は支台に対するおもりの相対変位である．運動方程式は，
$$
m \frac{d^2y}{dt^2} = -k(y - x_1) \tag{3.20}
$$
$$
\Longleftrightarrow m\frac{d^2 y}{dt^2} = -k(y - B \sin \Omega t) \tag{3.21}
$$
$$
\Longleftrightarrow \begin{cases}
\frac{dy}{dt} = v \\ \frac{dv}{dt} = - \frac{k}{m}y + \frac{kB}{m} \sin \Omega t
\end{cases} \tag{3.22}
$$
$\rightsquigarrow$ おもりに鉛直方向の周期的外力
$$
F_{\mathrm{ex}} = kB \sin \Omega t \tag{3.23}
$$
が働く場合と同じ．&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-a-namesection3ダフィング-duffing-方程式a&#34;&gt;3. &lt;a name=&#34;section3&#34;&gt;ダフィング (Duffing) 方程式&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;減衰的な駆動振動子のモデル
$$
\frac{d^2 x}{dt^2} + \delta \frac{dx}{dt} + \alpha x + \beta x^3 = \gamma \cos \Omega t  \tag{3.24}
$$
$$
\Longleftrightarrow \begin{cases}
\frac{dx}{dt} = v \\ \frac{dv}{dt} = -\alpha x - \beta x^3 - \delta v + \gamma \cos \Omega t
\end{cases} \tag{3.25}
$$
&lt;ul&gt;
&lt;li&gt;$\alpha$: 剛性の大きさ&lt;/li&gt;
&lt;li&gt;$\beta$: 復元力に含まれる非線形性&lt;/li&gt;
&lt;li&gt;$\gamma$: 周期駆動力の振幅&lt;/li&gt;
&lt;li&gt;$\Omega$: 周期駆動力の周波数&lt;/li&gt;
&lt;li&gt;$\delta$: 減衰の大きさ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Duffing方程式のパラメータを次のように設定する．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$\alpha = -1, \beta = 1, \gamma = 1, \delta = 0.2, \Omega = 0.4\pi$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また，初期状態 $x(0), v(0)$ を次のようにする．&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$x(0) = 0, v(0) = 0.05$&lt;/li&gt;
&lt;li&gt;$x(0) = 0, v(0) = 0.06$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;このとき，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;状態 $x$ の時間応答&lt;/li&gt;
&lt;li&gt;$x-v$ 空間 (相空間) の軌道&lt;/li&gt;
&lt;li&gt;$t-x-v$ 空間 (拡大相空間) の軌道&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;を示す．&lt;/p&gt;
&lt;h6 id=&#34;状態-x-の時間応答&#34;&gt;状態 $x$ の時間応答&lt;/h6&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-1の場合の時間応答&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.3_time_response_1.svg&#34; alt=&#34;fig11&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      1の場合の時間応答
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-2の場合の時間応答&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.3_time_response_2.svg&#34; alt=&#34;fig12&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      2の場合の時間応答
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;初期速度がわずかに異なると，状態の時間応答が大きく異なっていることがわかる．このように，初期値の非常に小さな差が将来の軌道に大きな影響を及ぼすという点で，カオス的な振る舞いであるといえる．&lt;/p&gt;
&lt;h6 id=&#34;x-v-空間-相空間-の軌道&#34;&gt;$x-v$ 空間 (相空間) の軌道&lt;/h6&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-1の場合の軌道&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.3_flow_1.svg&#34; alt=&#34;fig13&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      1の場合の軌道
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-2の場合の軌道&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.3_flow_2.svg&#34; alt=&#34;fig14&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      2の場合の軌道
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-1の場合の軌道-gif&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.3_duffing.gif&#34; alt=&#34;gif1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      1の場合の軌道 (gif)
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h6 id=&#34;t-x-v-空間-拡大相空間-の軌道&#34;&gt;$t-x-v$ 空間 (拡大相空間) の軌道&lt;/h6&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-1の場合の軌道&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.3_expand_flow_1.svg&#34; alt=&#34;fig15&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      1の場合の軌道
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-2の場合の軌道&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.3_expand_flow_2.svg&#34; alt=&#34;fig16&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      2の場合の軌道
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;4-a-namesection4二重振り子a&#34;&gt;4. &lt;a name=&#34;section4&#34;&gt;二重振り子&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;別の機会に書きたいと思っている．今回は略．&lt;/p&gt;
&lt;h3 id=&#34;5-a-namesection51階微分方程式a&#34;&gt;5. &lt;a name=&#34;section5&#34;&gt;1階微分方程式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;$x$を独立変数，$y$を未知関数とする1階微分方程式が
$$
\frac{dy}{dx} = \frac{f(x, y)}{g(x, y)} \tag{3.33}
$$
で与えられているとする．&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ $x \rightarrow t$とすると，1次元非自律ベクトル場が得られる．
$$
\frac{dy}{dt} = \frac{f(t, y)}{g(t, y)} \tag{3.34}
$$
$\rightsquigarrow$ 別の見方をする．&lt;/p&gt;
&lt;p&gt;$x, y$が媒介変数$t$の関数であることを考えると，
$$
\frac{dy}{dx} = \frac{\frac{dy}{dt}}{\frac{dx}{dt}} \tag{3.35}
$$
が成り立つ．&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ 2次元の自律ベクトル場
$$
\begin{cases}
\frac{dx}{dt} = g(x, y) \\ \frac{dy}{dt} = f(x, y)
\end{cases} \tag{3.36}
$$
を考えると，解曲線 $(x(t), y(t))$ はODE (3.33) の解となる．&lt;/p&gt;
&lt;h6 id=&#34;ex-31-変数分離形微分方程式&#34;&gt;Ex 3.1. 変数分離形微分方程式&lt;/h6&gt;
&lt;p&gt;$$
\frac{dy}{dx} = \frac{f(x)}{g(y)} \tag{3.37}
$$
を変数分離形という．一般解は
$$
\int g(y) dy = \int f(x) dx + c \tag{3.38}
$$
で与えられる．&lt;/p&gt;
&lt;p&gt;$$
\frac{dy}{dx} = \frac{-(1 - x)y}{(1 - y)x} \tag{3.39}
$$
は変数分離形である．これは，次の2次元自律ベクトル場で表現される．
$$
\begin{cases}
\frac{dx}{dt} = (1 - y)x \\ \frac{dy}{dt} = -(1 - x)y
\end{cases} \tag{3.40}
$$&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_vector_field_1.svg&#34; alt=&#34;fig17&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-流れの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_flow_1.svg&#34; alt=&#34;fig18&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      流れの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h6 id=&#34;ex-32-同次形微分方程式&#34;&gt;Ex 3.2. 同次形微分方程式&lt;/h6&gt;
&lt;p&gt;$$
\frac{dy}{dx} = f\left( \frac{x}{y} \right) \tag{3.41}
$$
変数変換
$$
\frac{y}{x} = v \tag{3.42}
$$
で変数分離形になる．&lt;/p&gt;
&lt;p&gt;$$
\frac{dy}{dx} = \frac{-y^2}{x(x - y)} \tag{3.43}
$$
は同次形．これは次の2次元自律ベクトル場で表現される．
$$
\begin{cases}
\frac{dx}{dt} = x(x - y) \\ \frac{dy}{dt} = -y^2
\end{cases} \tag{3.44}
$$&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_vector_field_2.svg&#34; alt=&#34;fig19&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-流れの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_flow_2.svg&#34; alt=&#34;fig20&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      流れの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h6 id=&#34;ex-33-線形微分方程式&#34;&gt;Ex 3.3. 線形微分方程式&lt;/h6&gt;
&lt;p&gt;$$
\frac{dy}{dx} + P(x)y = Q(x) \tag{3.45}
$$
一般解は，
$$
y = e^{-\int P dx} \left(\int Q e^{\int P dx} dx + c \right) \tag{3.46}
$$&lt;/p&gt;
&lt;p&gt;$$
\frac{dy}{dx} = \frac{\cos^2 x + y \sin x}{\cos x} \tag{3.47}
$$
は線形微分方程式．これは次の2次元自律ベクトル場で表現できる．
$$
\begin{cases}
\frac{dx}{dt} = \cos x \\ \frac{dy}{dt} = \cos^2 x + y \sin x
\end{cases} \tag{3.48}
$$&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_vector_field_3.svg&#34; alt=&#34;fig21&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-流れの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_flow_3.svg&#34; alt=&#34;fig22&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      流れの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h6 id=&#34;ex-34-ベルヌーイの微分方程式&#34;&gt;Ex 3.4. ベルヌーイの微分方程式&lt;/h6&gt;
&lt;p&gt;$$
\frac{dy}{dx} + P(x)y = Q(x)y^n \ (n \neq 0, 1) \tag{3.49}
$$
変数変換
$$
z = y^{1 - n} \tag{3.50}
$$
によって線形微分方程式になる．&lt;/p&gt;
&lt;p&gt;$$
\frac{dy}{dx} = \frac{-y + x^3 y^3}{x} \tag{3.51}
$$
はベルヌーイの微分方程式．これは次の2次元自律ベクトル場として表現される．
$$
\begin{cases}
\frac{dx}{dt} = x \\ \frac{dy}{dt} = -y + x^3 y^3
\end{cases} \tag{3.52}
$$&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_vector_field_4.svg&#34; alt=&#34;fig23&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-流れの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_flow_4.svg&#34; alt=&#34;fig24&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      流れの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h6 id=&#34;ex-35-完全微分方程式&#34;&gt;Ex 3.5. 完全微分方程式&lt;/h6&gt;
&lt;p&gt;$$
P(x, y)dx + Q(x, y)dy = 0 \tag{3.53}
$$
の左辺がある関数 $u(x, y)$ の全微分 $du = u_x dx + u_y dy$ になっているとき，完全微分方程式という．一般解は，
$$
\int_a^x P(x, y) dx + \int_b^y Q(x, y)dy = c \tag{3.54}
$$
で与えられる．$a,b$: 定数，$c$: 任意定数．&lt;/p&gt;
&lt;p&gt;$$
\frac{dy}{dx} = \frac{-x^3 -2xy - y}{y^3 + x^2 + x} \tag{3.55}
$$
は完全微分方程式．これは次の2次元自律ベクトル場で表現される．
$$
\begin{cases}
\frac{dx}{dt} = y^3 + x^2 + x \\ \frac{dy}{dt} = -x^3 - 2xy - y
\end{cases} \tag{3.56}
$$&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ベクトル場&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_vector_field_5.svg&#34; alt=&#34;fig25&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ベクトル場
    &lt;/figcaption&gt;&lt;/figure&gt;

















&lt;figure  id=&#34;figure-流れの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.5_flow_5.svg&#34; alt=&#34;fig26&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      流れの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;6-a-namesection62階微分方程式a&#34;&gt;6. &lt;a name=&#34;section6&#34;&gt;2階微分方程式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;$x$ を独立変数，$y$ を未知関数とする2階微分方程式が
$$
\frac{d^2y}{dx^2} = \frac{f(x, y, y^{\prime})}{g(x, y, y^{\prime})} \tag{3.57}
$$
で与えられているとする．$x, y$ が媒介変数 $t$ の関数であると考えると，
$$
\frac{dy^{\prime}}{dx} = \frac{\frac{dy^{\prime}}{dt}}{\frac{dx}{dt}} \tag{3.58}
$$
$$
\frac{dy}{dx} = y^{\prime} = \frac{\frac{dy}{dt}}{\frac{dx}{dt}} \tag{3.59}
$$
が成り立つ．&lt;/p&gt;
&lt;p&gt;3次元のベクトル場
$$
\begin{cases}
\frac{dx}{dt} = g(x, y, y^{\prime}) \\ \frac{dy}{dt} = y^{\prime}g(x, y, y^{\prime}) \\ \frac{dy^{\prime}}{dt} = f(x, y, y^{\prime})
\end{cases} \tag{3.60}
$$
を考えると，解曲線 $(x(t), y(t), y^{\prime}(t))$ は微分方程式(3.60)の解となる．&lt;/p&gt;
&lt;h6 id=&#34;ex-36&#34;&gt;Ex 3.6.&lt;/h6&gt;
&lt;p&gt;$$
\frac{d^2y}{dx^2} = -y \tag{3.61}
$$
は，$dy/dx = z$ とおくことで，次の3次元自律ベクトル場に表現される．
$$
\begin{cases}
\frac{dx}{dt} = 1 \\ \frac{dy}{dt} = z \\ \frac{dz}{dt} = -y
\end{cases} \tag{3.62}
$$&lt;/p&gt;
&lt;p&gt;(3.61)の一般解は，
$$
y = A \cos x + B \sin x \tag{3.63}
$$
で与えられる．&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-流れの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.6_flow_1.svg&#34; alt=&#34;center&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      流れの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;7-a-namesection7ストレンジアトラクタを持つ3次元自律ベクトル場a&#34;&gt;7. &lt;a name=&#34;section7&#34;&gt;ストレンジアトラクタを持つ3次元自律ベクトル場&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;アトラクタ
&lt;ul&gt;
&lt;li&gt;力学系の相空間で，周囲の軌道を引き寄せて逃さない性質を持つ不変集合&lt;/li&gt;
&lt;li&gt;点アトラクタ，周期アトラクタ，準周期アトラクタ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ストレンジアトラクタ
&lt;ul&gt;
&lt;li&gt;1960年代にコンピュータの発達・普及により従来知られていなかったアトラクタが多く見つかった．&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;ex-38-ローレンツアトラクタ&#34;&gt;Ex 3.8. ローレンツアトラクタ&lt;/h6&gt;
&lt;p&gt;$$
\begin{cases}
\frac{dx}{dt} = -\sigma (x - y) \\ \frac{dy}{dt} = -y - xz + rx \\ \frac{dz}{dt} = xy - bz
\end{cases} \tag{3.68}
$$&lt;/p&gt;
&lt;p&gt;温度差のある上下の境界を持つ容器に入った流体の流れをモデル化したもの．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$x$: 流れの関数をフーリエ展開したときの係数に対応．対流の強さを表す．&lt;/li&gt;
&lt;li&gt;$y$: 上昇流と下降流の温度差&lt;/li&gt;
&lt;li&gt;$z$: 上下方向の温度差&lt;/li&gt;
&lt;li&gt;$\sigma$: ブランドル数，$r$: レイリー数，$b$: 容器の高さと幅の比から定まる数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$\rightsquigarrow (\sigma, r, b) = (10, 28, 8/3)$ のとき，ローレンツアトラクタ．&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ローレンツアトラクタの解軌道-gif&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/3.7_lorenz.gif&#34; alt=&#34;gif2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ローレンツアトラクタの解軌道 (gif)
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;8-a-namesection8まとめa&#34;&gt;8. &lt;a name=&#34;section8&#34;&gt;まとめ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この記事では，さまざまな力学系についてまとめ，ベクトル場や解軌道を図示した．プログラムは，GitHub (C++&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, Jupyter Notebook&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;) に上げている．&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;小室，&lt;a href=&#34;https://www.saiensu.co.jp/book_support/sgc-17/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基礎からの力学系&lt;/a&gt;，サイエンス社，2002.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tcbn-ai/TIL/tree/main/Study_Nonlinear_systems/code&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/tcbn-ai/TIL/tree/main/Study_Nonlinear_systems/code&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tcbn-ai/TIL/tree/main/Study_Nonlinear_systems/ipython_notebook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/tcbn-ai/TIL/tree/main/Study_Nonlinear_systems/ipython_notebook&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>力学系の分岐現象: 力学系の定義</title>
      <link>https://tachibana-ai.netlify.app/post/nonlinear_bifurcation_definition/</link>
      <pubDate>Sat, 28 Aug 2021 12:26:44 +0900</pubDate>
      <guid>https://tachibana-ai.netlify.app/post/nonlinear_bifurcation_definition/</guid>
      <description>&lt;h3 id=&#34;0-はじめに&#34;&gt;0. はじめに&lt;/h3&gt;
&lt;p&gt;この記事では，文献&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;の第2章の内容をまとめた．&lt;/p&gt;
&lt;h5 id=&#34;目次&#34;&gt;目次&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#section1&#34;&gt;連続時間力学系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#section2&#34;&gt;離散時間力学系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#section3&#34;&gt;ポアンカレ写像&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;3.1 &lt;a href=&#34;#section3.1&#34;&gt;自律系のポアンカレ写像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.2 &lt;a href=&#34;#section3.2&#34;&gt;非自律系のポアンカレ写像&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#section4&#34;&gt;補足: プログラム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-a-namesection1連続時間力学系--ベクトル場-a&#34;&gt;1. &lt;a name=&#34;section1&#34;&gt;連続時間力学系 ― ベクトル場 ―&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この節では，通常の微分積分学の教科書で扱われる微分方程式の定義と，力学系理論で扱われる微分方程式との関係について扱う．独立変数を$t$とする．&lt;/p&gt;
&lt;h6 id=&#34;def-21&#34;&gt;Def 2.1&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;$F: D \ (\subset \mathbb{R}^{n + 2}) \to \mathbb{R}$: ($n + 2$) 変数実数値関数 $(n \geq 1)$
$$
F(t, x, x^{\prime}, \ldots, x^{(n)}) = 0 \tag{2.1}
$$
を &lt;strong&gt;$n$階常微分方程式&lt;/strong&gt; という．&lt;/li&gt;
&lt;li&gt;$f: D_0 \ (\subset \mathbb{R}^{n + 1}) \to \mathbb{R}$: ($n + 1$) 変数実数値関数
$$
x^{(n)} = f(t, x, x^{\prime}, \ldots, x^{(n - 1)}) \tag{2.2}
$$
を &lt;strong&gt;正規形の$n$階常微分方程式&lt;/strong&gt; という．&lt;/li&gt;
&lt;li&gt;$f_1, \ldots, f_n: D_0 \ (\subset \mathbb{R}^{n + 1}) \to \mathbb{R}$に対して，
$$
\begin{cases}
\frac{dx_1}{dt} = f_1(t, x_1, \ldots, x_n) \\ \cdots \\ \frac{dx_n}{dt} = f_n(t, x_1, \ldots, x_n)
\end{cases} \tag{2.3}
$$
を &lt;strong&gt;$1$階連立常微分方程式&lt;/strong&gt; (&lt;strong&gt;常微分方程式系&lt;/strong&gt;) という．&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$1$階連立常微分方程式は，$\boldsymbol{x} = (x_1, \ldots, x_n) \in \mathbb{R}^n$ および写像 $g: \mathbb{R} \times \mathbb{R}^n \to \mathbb{R}^n$,
$$
g(t, \boldsymbol{x}) = (f_1(t, x_1, \ldots, x_n), \ldots, f_n(t, x_1, \ldots, x_n)) \tag{2.4}
$$
によって，
$$
\frac{d \boldsymbol{x}}{dt} = g(t, \boldsymbol{x}) \tag{2.5}
$$
のように表される ($\mathbb{R}^n$における常微分方程式)．以下，$\dot{\boldsymbol{x}} := d\boldsymbol{x}/dt$とする．常微分方程式は，連続時間力学系を表現する代表的なモデルである．以降，常微分方程式をODEと略記する．&lt;/p&gt;
&lt;p&gt;ODE (2.5) において，写像$g$が時間$t$を陽に含むか含まないかは，力学系理論での扱いに違いが生じる．写像$g$が時間$t$を陽に含まない場合を &lt;strong&gt;自律系&lt;/strong&gt; といい，写像$g$が時間$t$を陽に含む一般の場合 (&lt;strong&gt;非自律系&lt;/strong&gt;) と区別する．&lt;/p&gt;
&lt;h6 id=&#34;def-22-自律系&#34;&gt;Def 2.2 (自律系)&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;$\boldsymbol{x} := (x_1, \ldots, x_n) \in \mathbb{R}^n$とする．$f: D \ (\subset \mathbb{R}^n) \to \mathbb{R}$を，
$$
f(\boldsymbol{x}) = (f_1(\boldsymbol{x}), \ldots, f_n(\boldsymbol{x}))^{\mathrm{T}} \tag{2.6}
$$
とする．このとき，ODE
$$
\dot{\boldsymbol{x}}  = f(\boldsymbol{x}) \tag{2.7}
$$
$$
\Longleftrightarrow \begin{cases}
\dot{x}_1 = f_1(x_1, \ldots, x_n) \\ \cdots \\ \dot{x}_n = f_n(x_1, \ldots, x_n)
\end{cases} \tag{2.8}
$$
を &lt;strong&gt;自律系&lt;/strong&gt; という．&lt;/li&gt;
&lt;li&gt;$D$を相空間，$D$の各点$\boldsymbol{x}$にベクトル$f(\boldsymbol{x})$を対応させる写像
$$
f: \boldsymbol{x} \mapsto f(\boldsymbol{x}) \tag{2.9}
$$
をベクトル場という．ベクトル場はODEを幾何学的に表現したもの．力学系の理論ではベクトル場はODEと同じ意味で使われることが多い．&lt;/li&gt;
&lt;li&gt;区間 $I \subset \mathbb{R}$ で定義された曲線 $\boldsymbol{x}: I \to \mathbb{R}^n$ が
$$
\dot{\boldsymbol{x}} = f(\boldsymbol{x}(t)) \tag{2.10}
$$
を満たすとき，$\boldsymbol{x}$はODE (2.7)の解 (解曲線) であるという．$\boldsymbol{x}(0)$: 初期値．ODEの解 $\boldsymbol{x}$ は，ベクトル場の &lt;strong&gt;軌道&lt;/strong&gt; (orbit) とも呼ばれる．&lt;/li&gt;
&lt;li&gt;$I \subset \mathbb{R}$ を $0$ を含む開区間，$D \subset \mathbb{R}^n$ とする．写像 $\varphi: I \times D \to \mathbb{R}^n$ が $\varphi(0, \boldsymbol{x}_0) = \boldsymbol{x}_0$ を満たし，各 $\boldsymbol{x}_0 \in D$ を固定するとき，
$$
\frac{d \varphi(t, \boldsymbol{x}_0)}{dt} = f(\varphi(t, \boldsymbol{x}_0)) \tag{2.11}
$$
を満たすならば，$\varphi$はODE (2.7)の &lt;strong&gt;流れ&lt;/strong&gt; (flow) であるという (ベクトル場(2.9)の流れとも呼ばれる)．&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&#34;ex-21-2次元自律微分方程式&#34;&gt;Ex 2.1 (2次元自律微分方程式)&lt;/h6&gt;
&lt;p&gt;ここで，自律系について理解するために，2次元自律系微分方程式の例を考える．&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$\boldsymbol{x} = (x, y)$, $f: \mathbb{R}^2 \to \mathbb{R}^2$を
$$
f(\boldsymbol{x}) = (f_1(x, y), f_2(x, y)) = (y, -x) \tag{2.12}
$$
で定義．このとき，
$$
\begin{cases}
\dot{x} = y \\ \dot{y} = -x
\end{cases} \tag{2.13}
$$
は$f$によって与えられる自律系のODE．&lt;/li&gt;
&lt;li&gt;ベクトル場は，$(x, y) \mapsto (y, -x)$である．相空間は$\mathbb{R}^2$．
ベクトル場は以下の図のようになる．
















&lt;figure  id=&#34;figure-自律系のベクトル場の例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/2.1_autonomous.svg&#34; alt=&#34;fig_1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      自律系のベクトル場の例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;曲線$\boldsymbol{x}: \mathbb{R} \to \mathbb{R}^2$を
$$
\boldsymbol{x}(t) = (x_0 \cos t + y_0 \sin t, -x_0 \sin t + y_0 \cos t) \tag{2.14}
$$
で定義すれば，$\boldsymbol{x}$は初期値$(x_0, y_0)$を持つ解曲線となる．&lt;/li&gt;
&lt;li&gt;$\varphi: \mathbb{R} \times \mathbb{R}^2 \to \mathbb{R}^2$を
$$
\varphi(t, x_0, y_0) = (x_0 \cos t + y_0 \sin t, -x_0 \sin t + y_0 \cos t) = (x_t, y_t) \tag{2.15}
$$
と定義．$\varphi$は上のODEの流れである．&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;次に，非自律系微分方程式について．&lt;/p&gt;
&lt;h6 id=&#34;def-23-非自律系&#34;&gt;Def 2.3 (非自律系)&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;$g: I \times D \to \mathbb{R}^n$とする．
&lt;ul&gt;
&lt;li&gt;$I \subset \mathbb{R}$, $D \subset \mathbb{R}^n$
$$
g(t, \boldsymbol{x}) = (g_1(t, \boldsymbol{x}), \ldots, g_n(t, \boldsymbol{x}))^{\mathrm{T}} \tag{2.19}
$$
このとき，ODE
$$
\dot{\boldsymbol{x}} = g(t, \boldsymbol{x}) \tag{2.20}
$$
$$
\Longleftrightarrow \begin{cases}
\dot{x}_1 = g_1(t, x_1, \ldots, x_n) \\ \cdots \\ \dot{x}_n = g_n(t, x_1, \ldots, x_n)
\end{cases} \tag{2.21}
$$
を &lt;strong&gt;非自律系&lt;/strong&gt; (non-autonomous system) という．&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$I \times D$: 拡大相空間．
$$
(t, \boldsymbol{x}) \mapsto (1, g(t, \boldsymbol{x})) \tag{2.22}
$$
をベクトル場という．&lt;/li&gt;
&lt;li&gt;曲線$\boldsymbol{x}: I \to \mathbb{R}^n$が
$$
\dot{\boldsymbol{x}} = g(t, \boldsymbol{x}(t)) \tag{2.23}
$$
を満たすとき，$\boldsymbol{x}$はODE (2.20) の解 (解曲線) という．$\boldsymbol{x}(t_0)$: 初期値．&lt;/li&gt;
&lt;li&gt;$\varphi: \mathbb{R} \times \mathbb{R} \times \mathbb{R}^n \to \mathbb{R}^n$ が $\varphi(t_0, t_0, \boldsymbol{x}_0) = \boldsymbol{x}_0$ を満たし，各 $(t_0, \boldsymbol{x}_0) \in I \times D$ を固定するとき
$$
\frac{d \varphi(t, t_0, \boldsymbol{x}_0)}{dt} = g(t, \varphi(t, t_0, \boldsymbol{x}_0)) \tag{2.24}
$$
を満たすならば，$\varphi$はODE (2.20) の &lt;strong&gt;流れ&lt;/strong&gt; であるという．&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&#34;ex-22-1次元非自律微分方程式&#34;&gt;Ex 2.2 (1次元非自律微分方程式)&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;$(t, x) \in \mathbb{R} \times \mathbb{R}$, $g: \mathbb{R} \times \mathbb{R} \to \mathbb{R}$ を
$$
g(x, t) = xt \tag{2.25}
$$
で定義．このとき，
$$
\dot{x} = g(t, x) = xt \tag{2.26}
$$
は$g$によって与えられる非自律系のODE．&lt;/li&gt;
&lt;li&gt;ベクトル場は$(t, x) \mapsto (1, xt)$．拡大相空間は$\mathbb{R} \times \mathbb{R}$．
















&lt;figure  id=&#34;figure-非自律系のベクトル場の例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/2.2_non_autonomous.svg&#34; alt=&#34;fig_2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      非自律系のベクトル場の例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;曲線$\boldsymbol{x}: \mathbb{R} \to \mathbb{R}$を
$$
\boldsymbol{x}(t) = x_0 \exp\left(\frac{1}{2}(t^2 - t_0^2) \right) \tag{2.27}
$$
で定義すれば，$\boldsymbol{x}$は$t = t_0$のとき，$x_0$を初期値とする解曲線となる．&lt;/li&gt;
&lt;li&gt;写像$\varphi: \mathbb{R} \times \mathbb{R} \times \mathbb{R} \to \mathbb{R}$を，
$$
\varphi(t, t_0, x_0) = x_0 \exp\left( \frac{1}{2}(t^2 - t_0^2) \right) \tag{2.28}
$$
で定義．この$\varphi$は上のODEの流れである．&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-a-namesection2離散時間力学系--写像-a&#34;&gt;2. &lt;a name=&#34;section2&#34;&gt;離散時間力学系 ― 写像 ―&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;離散時間力学系を表現する代表的な数学モデルは離散時間差分方程式である．&lt;/p&gt;
&lt;h6 id=&#34;def-24&#34;&gt;Def 2.4&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$\boldsymbol{x} = (x_1, \ldots, x_n)^{\mathrm{T}} \in \mathbb{R}^n$, $f: \mathbb{R}^n \to \mathbb{R}^n$: 連続写像.
$$
f(\boldsymbol{x}) = (f_1(\boldsymbol{x}), \ldots, f_n(\boldsymbol{x}))^{\mathrm{T}} \tag{2.30}
$$
このとき，離散時間差分方程式
$$
\boldsymbol{x}(t + 1) = f(\boldsymbol{x}(t)), \ \ (t = 0, 1, 2, \ldots) \tag{2.31}
$$
$$
\Longleftrightarrow \begin{cases}
x_1(t + 1) = f_1(x_1(t), \ldots, x_n(t)) \\ \cdots \\ x_n(t + 1) = f_n(x_1(t), \ldots, x_n(t))
\end{cases} \tag{2.32}
$$
を &lt;strong&gt;離散時間力学系&lt;/strong&gt; という．単に &lt;strong&gt;写像&lt;/strong&gt; ということもある．&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点 $\boldsymbol{x}_0 \in \mathbb{R}^n$ に対して，&lt;/p&gt;
&lt;p&gt;$$\boldsymbol{x}_{t + 1} = f(\boldsymbol{x}_t), \ \ (t = 0, 1, 2, \ldots) \tag{2.33}$$
で与えられる ${\boldsymbol{x}_t: \ t = 0, 1, 2, \ldots}$ を点 $\boldsymbol{x}_0$ を通る &lt;strong&gt;正の半軌道&lt;/strong&gt; という．&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$f$が同相写像 (逆写像$f^{-1}$が存在し，逆写像も連続) であるとき，&lt;strong&gt;可逆系&lt;/strong&gt; といい，そうでないとき，&lt;strong&gt;非可逆系&lt;/strong&gt; という．可逆系の場合には，時間の負の時間方向 (過去) への軌道も考えることができる．
点$\boldsymbol{x}_0 \in \mathbb{R}^n$に対して，&lt;/p&gt;
&lt;p&gt;$$
\boldsymbol{x}_{t - 1} = f^{-1}(\boldsymbol{x}_t) \ \ (t = 0, -1, -2, \ldots) \tag{2.34}
$$
で与えられる点列${\boldsymbol{x}_t: \ t = -1, -2, \ldots}$を${\boldsymbol{x}_t: \ t = 0, 1, 2}$に加えて得られる点列${\boldsymbol{x}_t: \ t = 0, \pm 1, \pm 2, \ldots}$を$\boldsymbol{x}_0$を通る &lt;strong&gt;軌道&lt;/strong&gt; という．&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-a-namesection3ポアンカレ写像a&#34;&gt;3. &lt;a name=&#34;section3&#34;&gt;ポアンカレ写像&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;連続時間力学系における周期軌道の解析は，1次元低い次元の空間における離散時間力学系の解析に帰着されることがある．この離散時間力学系はポアンカレ写像と呼ばれる．&lt;/p&gt;
&lt;h4 id=&#34;31-a-namesection31自律系のポアンカレ写像a&#34;&gt;3.1. &lt;a name=&#34;section3.1&#34;&gt;自律系のポアンカレ写像&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;3次元自律系ベクトル場&lt;/p&gt;
&lt;p&gt;$$
\dot{\boldsymbol{x}} = f(\boldsymbol{x}), \ \ \boldsymbol{x} \in \mathbb{R}^3 \tag{2.35}
$$&lt;/p&gt;
&lt;p&gt;を考える．このベクトル場が周期軌道 $\Gamma$ を持つとする．
このとき，$\Gamma$ と1点 $\boldsymbol{p}$ で横断的に交わる2次元平面 $\Sigma$ をとる．&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ $\boldsymbol{p}$ は流れ $\varphi$ に沿って動く時，再び $\Sigma$ 上の点 $\boldsymbol{p}$ を打つ．&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ $\boldsymbol{p}$ に十分近い $\Sigma$ 上の点 $\boldsymbol{q}$ が流れに沿って動くとき， $\boldsymbol{p}$ の近くの点 $\boldsymbol{q}^{\prime}$ を打つと考えられる ($\because$ 解の連続性，$\Sigma$ が $\Gamma$ に横断的であること)．&lt;/p&gt;
&lt;p&gt;上記のようにして， $\Sigma$ 上の $\boldsymbol{p}$ の近傍 $U$ から $\Sigma$ への写像が定義できる．&lt;/p&gt;
&lt;h6 id=&#34;def-25&#34;&gt;Def 2.5&lt;/h6&gt;
&lt;p&gt;$U$: $\Sigma$ における $\boldsymbol{p}$ の近傍．$\boldsymbol{q} \in U$ に対して，$\boldsymbol{q}^{\prime}$ を流れ $\varphi$ によって&lt;/p&gt;
&lt;p&gt;$$
\boldsymbol{q}^{\prime} = \varphi(T, \boldsymbol{q}), \ \ T = \min \{t &amp;gt; 0 \ | \ \varphi(t, \boldsymbol{q}) \in \Sigma  \} \tag{2.36}
$$&lt;/p&gt;
&lt;p&gt;で定義する．この写像&lt;/p&gt;
&lt;p&gt;$$
P: U \ni \boldsymbol{q} \mapsto \boldsymbol{q}^{\prime} \in \Sigma \tag{2.37}
$$&lt;/p&gt;
&lt;p&gt;を自律系ベクトル場の &lt;strong&gt;ポアンカレ写像&lt;/strong&gt; といい，$\Sigma$ を &lt;strong&gt;ポアンカレ断面&lt;/strong&gt; という．&lt;/p&gt;
&lt;h6 id=&#34;remark&#34;&gt;Remark&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ポアンカレ写像は有界な領域$U$で定義された写像&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ $\boldsymbol{q}$に対して$P$で繰り返し変換すると，像が$U$の外に出てしまうことがある．&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ 自律系のポアンカレ写像は，局所的に定義された離散時間力学系．&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ポアンカレ写像を使用する場面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;パラメータを持つベクトル場の周期軌道の安定性の変化や分岐を調べるとき&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ 周期軌道の安定性や分岐は，ポアンカレ写像の不動点$\boldsymbol{p}$の安定性や分岐に帰着される&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;あらかじめ定めたポアンカレ断面がパラメータのどの範囲で有効に働くかは，ベクトル場や周期軌道の性質に依存する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;32-a-namesection32非自律系のポアンカレ写像a&#34;&gt;3.2. &lt;a name=&#34;section3.2&#34;&gt;非自律系のポアンカレ写像&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;時間に関して周期 $T$ の周期性を持つ2次元の非自律ベクトル場を考える．&lt;/p&gt;
&lt;p&gt;$$
\dot{\boldsymbol{x}} = g(t, \boldsymbol{x}), \ \ \boldsymbol{x} \in \mathbb{R}^2 \tag{2.38}
$$
$$
g(t, \boldsymbol{x}) = g(t + T, \boldsymbol{x}) \tag{2.39}
$$&lt;/p&gt;
&lt;p&gt;このベクトル場の流れを，$\varphi: \mathbb{R} \times \mathbb{R} \times \mathbb{R}^2 \to \mathbb{R}^2$ とする．&lt;/p&gt;
&lt;h6 id=&#34;def-26&#34;&gt;Def 2.6&lt;/h6&gt;
&lt;p&gt;$\boldsymbol{x} \in \mathbb{R}^2$に対して，$\varphi(T, 0, \boldsymbol{x}) \in \mathbb{R}^2$を対応させる写像
$$
P: \mathbb{R}^2 \ni \boldsymbol{x} \mapsto \varphi(T, 0, \boldsymbol{x}) \in \mathbb{R}^2 \tag{2.40}
$$
を非自律系の &lt;strong&gt;ポアンカレ写像&lt;/strong&gt; (&lt;strong&gt;ストロボ写像&lt;/strong&gt;) という．&lt;/p&gt;
&lt;p&gt;ベクトル場の解 $\boldsymbol{x}: \mathbb{R} \to \mathbb{R}^2$ が $t = 0$ のとき $\boldsymbol{x} = \boldsymbol{x}_0$ を初期値とし，&lt;/p&gt;
&lt;p&gt;$$
\boldsymbol{x}(t) = \boldsymbol{x}(t + T), \ \ t \in \mathbb{R}  \tag{2.41}
$$&lt;/p&gt;
&lt;p&gt;を満たすとき，$\boldsymbol{x}(0) = \boldsymbol{x}_0$ はポアンカレ写像 $P$ の不動点となる ($P(\boldsymbol{x}_0) = \boldsymbol{x}_0$)．&lt;/p&gt;
&lt;p&gt;また，解 $\boldsymbol{x}: \mathbb{R} \to \mathbb{R}^2$ が $t = 0$ のとき， $\boldsymbol{x} = \boldsymbol{x}_0$ を初期値とし，&lt;/p&gt;
&lt;p&gt;$$
\boldsymbol{x}(t) \neq \boldsymbol{x}(t + T) \tag{2.43}
$$
$$
\boldsymbol{x}(t) = \boldsymbol{x}(t + 2T) \tag{2.44}
$$
を満たすとき，$\boldsymbol{x}(0) = \boldsymbol{x}_0$ はポアンカレ写像 $P$ の2周期点となる．&lt;/p&gt;
&lt;p&gt;$\rightsquigarrow$ 非自律系ベクトル場の基本周期 $T$ の整数倍の周期を持つ解曲線の解析を，ポアンカレ写像の周期点の解析に帰着させることができる．&lt;/p&gt;
&lt;p&gt;自律系と非自律系のポアンカレ写像は，以下の図のように表される．
















&lt;figure  id=&#34;figure-ポアンカレ写像&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./fig/poincare.svg&#34; alt=&#34;fig_3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ポアンカレ写像
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;4-a-namesection4補足-プログラムa&#34;&gt;4. &lt;a name=&#34;section4&#34;&gt;補足: プログラム&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;自律系と非自律系のベクトル場を描画する際に用いたプログラムはGitHub&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;に上げている．&lt;/p&gt;
&lt;h3 id=&#34;5-a-namesection5まとめa&#34;&gt;5. &lt;a name=&#34;section5&#34;&gt;まとめ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この記事では，力学系の定義についてまとめ，ベクトル場を描画した．&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;小室，&lt;a href=&#34;https://www.saiensu.co.jp/book_support/sgc-17/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基礎からの力学系&lt;/a&gt;，サイエンス社，2002.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tcbn-ai/TIL/tree/main/Study_Nonlinear_systems/code&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/tcbn-ai/TIL/tree/main/Study_Nonlinear_systems/code&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>力学系の分岐現象: 導入</title>
      <link>https://tachibana-ai.netlify.app/post/nonlinear_bifurcation_introduction/</link>
      <pubDate>Sat, 28 Aug 2021 12:26:25 +0900</pubDate>
      <guid>https://tachibana-ai.netlify.app/post/nonlinear_bifurcation_introduction/</guid>
      <description>&lt;h3 id=&#34;0-はじめに&#34;&gt;0. はじめに&lt;/h3&gt;
&lt;p&gt;私は研究で非線形系の分岐現象を扱っている．私が修士の間に勉強してまとめていた非線形力学系の分岐現象 (特に1次元の場合) の基本的なことをブログに書きたいと思う．&lt;/p&gt;
&lt;p&gt;私が勉強したことは研究に必要だった基礎的なことだけなので，それ以上のことは理解していないので，まとめ終わったらもっと勉強したいと思う．&lt;/p&gt;
&lt;h3 id=&#34;1-今後の予定といくつかの文献の紹介&#34;&gt;1. 今後の予定といくつかの文献の紹介&lt;/h3&gt;
&lt;p&gt;M1の冬からM2の春にかけて文献&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;を参考にして非線形力学系の分岐現象についてまとめ，プログラムを書いていた．これまでまとめた資料とプログラムをブログの記事で公開したいと思っている．&lt;/p&gt;
&lt;p&gt;非線形力学系については多くの優れた文献がある．例えば，文献&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;は，非線形システムの制御の教科書の名著として知られている．非線形システムの安定性の解析について分かりやすくまとめられていると思う．&lt;/p&gt;
&lt;p&gt;また，文献&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;は力学系とカオスの入門書の名著として知られている．日本語の訳書も出ており，直感的な説明も数学的な解説もあるのが良い．私はこの文献は辞書代わりに使っていたが，時間があり気が向いたらしっかり読んでみたいと思っている．&lt;/p&gt;
&lt;p&gt;文献&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;は分岐現象の条件の直感的な説明と証明が記述されており，論文を執筆するときに参考にした．&lt;/p&gt;
&lt;p&gt;他にも名著はたくさんあるが，私が修士の間に勉強に使ったのは主にこの4つの本である．特に分岐現象の勉強には，文献&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;を用いた．&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;小室，&lt;a href=&#34;https://www.saiensu.co.jp/book_support/sgc-17/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基礎からの力学系&lt;/a&gt;，サイエンス社，2002.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;H. K. Khalil, &lt;a href=&#34;https://www.egr.msu.edu/~khalil/NonlinearControl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nonlinear Systems&lt;/a&gt;, 3rd ed., Prentice Hall, 2002.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;S. H. Strogatz, &lt;a href=&#34;http://www.stevenstrogatz.com/books/nonlinear-dynamics-and-chaos-with-applications-to-physics-biology-chemistry-and-engineering&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nonlinear Dynamics and Chaos: With Applications To Physics, Biology, Chemistry, And Engineering&lt;/a&gt;, CRC press, 2001.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;S. Wiggins, &lt;a href=&#34;https://www.researchgate.net/publication/258629276_Introduction_To_Applied_Nonlinear_Dynamical_Systems_And_Chaos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Applied Nonlinear Dynamical Systems and Chaos&lt;/a&gt;, 2nd ed., Springer, 2003.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>最適制御問題: 直接法 (プログラム)</title>
      <link>https://tachibana-ai.netlify.app/post/optimal_control_direct_method/</link>
      <pubDate>Fri, 27 Aug 2021 23:15:59 +0900</pubDate>
      <guid>https://tachibana-ai.netlify.app/post/optimal_control_direct_method/</guid>
      <description>&lt;h3 id=&#34;0-はじめに&#34;&gt;0. はじめに&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://tachibana-ai.netlify.app/post/optimal_control_numerical/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最適制御問題: 最適制御問題の数値解法&lt;/a&gt; のdirect single shootingを実装したものを載せる．&lt;/p&gt;
&lt;h3 id=&#34;1-コード&#34;&gt;1. コード&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;########## Packages ##########
from casadi import *
import numpy as np
import os 
import matplotlib.pyplot as plt 
##############################

########### plt ##########
plt.rcParams[&amp;quot;font.family&amp;quot;] = &amp;quot;serif&amp;quot;       # fonts
plt.rcParams[&amp;quot;font.serif&amp;quot;] = &amp;quot;Times New Roman&amp;quot;
plt.rcParams[&amp;quot;font.size&amp;quot;] = 18              
plt.rcParams[&amp;quot;mathtext.cal&amp;quot;] = &amp;quot;serif&amp;quot;      
plt.rcParams[&amp;quot;mathtext.rm&amp;quot;] = &amp;quot;serif&amp;quot;       
plt.rcParams[&amp;quot;mathtext.it&amp;quot;] = &amp;quot;serif:italic&amp;quot;
plt.rcParams[&amp;quot;mathtext.bf&amp;quot;] = &amp;quot;serif:bold&amp;quot;  
plt.rcParams[&amp;quot;mathtext.fontset&amp;quot;] = &amp;quot;cm&amp;quot;     
###########################
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Direct_single_shooting():
    &amp;quot;&amp;quot;&amp;quot;
    Solve optimal control problem numerically using direct single shooting method.
    &amp;quot;&amp;quot;&amp;quot;
    def __init__(self, T, N):
        self.T = T  # time horizon
        self.N = N  # number of control intervals
    
    def model_equation(self, x0, x1, u):
        &amp;quot;&amp;quot;&amp;quot;
        model equation
        dx_0/dt = (1 - x_1^2)x_0 - x_1 + u
        dx_1/dt = x_0
        &amp;quot;&amp;quot;&amp;quot;
        return vertcat((1 - x1**2)*x0 - x1 + u, x0)
    
    def stage_cost(self, x0, x1, u):
        &amp;quot;&amp;quot;&amp;quot;
        stage cost
        L(x, u) = x_0^2 + x_1^2 + u^2
        &amp;quot;&amp;quot;&amp;quot;
        return x0**2 + x1**2 + u**2 
    
    def discrete_dynamics(self, x0, x1, u):
        &amp;quot;&amp;quot;&amp;quot;
        Formulate discrete time dynamics
        &amp;quot;&amp;quot;&amp;quot;
        x = vertcat(x0, x1)
        xdot = self.model_equation(x0, x1, u)
        L = self.stage_cost(x0, x1, u)
        # CVODES from the SUNDIALS suite
        dae = {&#39;x&#39;: x, &#39;p&#39;: u, &#39;ode&#39;: xdot, &#39;quad&#39;: L}
        opts = {&#39;tf&#39;: self.T/self.N}
        F = integrator(&#39;F&#39;, &#39;cvodes&#39;, dae, opts)
        return F 
    
    def nlp(self, x0, x1, u, xinit):
        &amp;quot;&amp;quot;&amp;quot;
        Formulate and solve the NLP
        Given
        - x, u: MX.sym 
        - xinit: initial value of x
        &amp;quot;&amp;quot;&amp;quot;
        # discrete time dynamics
        F = self.discrete_dynamics(x0, x1, u)

        # empty
        w = []
        w0 = []
        lbw = []
        ubw = []
        J = 0 
        g = []
        lbg = []
        ubg = []

        # Formulate the NLP
        Xk = MX(xinit)
        for k in range(self.N):
            # New NLP variable for the control
            Uk = MX.sym(&#39;U_&#39; + str(k))
            w += [Uk]
            lbw += [-1]         # lower bound of u
            ubw += [1]          # upper bound of u
            w0 += [0]

            # Integrate till the end of the interval
            Fk = F(x0=Xk, p=Uk)
            Xk = Fk[&#39;xf&#39;]
            J = J + Fk[&#39;qf&#39;]

            # Add inequality constraints
            g += [Xk[0]]
            lbg += [-0.25]         # lower bound of x 
            ubg += [inf]          # upper bound of x
        
        # Create an NLP slver
        prob = {&#39;f&#39;: J, &#39;x&#39;: vertcat(*w), &#39;g&#39;: vertcat(*g)}
        solver = nlpsol(&#39;solver&#39;, &#39;ipopt&#39;, prob)

        # Solve the NLP 
        sol = solver(x0=w0, lbx=lbw, ubx=ubw, lbg=lbg, ubg=ubg)
        return sol 
    
    def plot_solution(self, x0, x1, u, xinit):
        &amp;quot;&amp;quot;&amp;quot;
        Plot the solution
        Given
        - x, u: MX.sym 
        - xinit: initial value of x
        &amp;quot;&amp;quot;&amp;quot;
        F = self.discrete_dynamics(x0, x1, u)
        sol = self.nlp(x0, x1, u, xinit)
        u_opt = sol[&#39;x&#39;]
        x_opt = [xinit]
        for k in range(self.N):
            Fk = F(x0=x_opt[-1], p=u_opt[k])
            x_opt.append(Fk[&#39;xf&#39;].full())
        x0_opt = [r[0] for r in x_opt]
        x1_opt = [r[1] for r in x_opt]

        tgrid = [self.T/self.N*k for k in range(self.N + 1)]

        fig = plt.figure(figsize=(10, 7.5))
        ax = fig.add_subplot(1,1,1)
        ax.plot(tgrid, x0_opt, &#39;--&#39;, label=r&#39;$x_0$&#39;)
        ax.plot(tgrid, x1_opt, &#39;-&#39;, label=r&#39;$x_1$&#39;)
        ax.step(tgrid, vertcat(DM.nan(1), u_opt), &#39;-.&#39;, label=r&#39;$u$&#39;)
        ax.legend(loc=&#39;best&#39;)
        ax.set_xlabel(r&#39;$t$&#39;); ax.set_ylabel(r&#39;$x_0, x_1, u$&#39;)
        ax.set_xlim([0, self.T])
        ax.grid(True)
        plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;########## Parameters ##########
T = 10
N = 20
################################

########## Instance ##########
direct_single_shooting = Direct_single_shooting(T=T, N=N)
##############################

########## figure ##########
x0 = MX.sym(&#39;x0&#39;)
x1 = MX.sym(&#39;x1&#39;)
u = MX.sym(&#39;u&#39;)
xinit = [0, 1]
direct_single_shooting.plot_solution(x0=x0, x1=x1, u=u, xinit=xinit)
############################
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>最適制御問題: 最適制御問題の数値解法</title>
      <link>https://tachibana-ai.netlify.app/post/optimal_control_numerical/</link>
      <pubDate>Fri, 27 Aug 2021 22:55:15 +0900</pubDate>
      <guid>https://tachibana-ai.netlify.app/post/optimal_control_numerical/</guid>
      <description>&lt;h3 id=&#34;0-はじめに&#34;&gt;0. はじめに&lt;/h3&gt;
&lt;p&gt;先日，6章の内容をまとめた (&lt;a href=&#34;https://tachibana-ai.netlify.app/post/optimal_control_dp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最適制御問題: 動的計画法と最小原理&lt;/a&gt;)．7章の数値解法のあたりでかなり詰まってしまっていた．今回は他の文献も用いてまとめたいと思う．&lt;/p&gt;
&lt;p&gt;理解が間違えている箇所もあるかもしれないので，ミスに気付いたら修正したいと思っている．&lt;/p&gt;
&lt;h4 id=&#34;01-目次&#34;&gt;0.1. 目次&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1 &lt;a href=&#34;#section1&#34;&gt;導入&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1.1 &lt;a href=&#34;#section1.1&#34;&gt;最適制御のアプローチ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 &lt;a href=&#34;#section2&#34;&gt;直接法&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2.1 &lt;a href=&#34;#section2.1&#34;&gt;Direct Single Shooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.2 &lt;a href=&#34;#section2.2&#34;&gt;Collocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.3 &lt;a href=&#34;#section2.3&#34;&gt;Direct Multiple Shooting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 &lt;a href=&#34;#section3&#34;&gt;実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 &lt;a href=&#34;#section4&#34;&gt;手書きメモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5 &lt;a href=&#34;#section5&#34;&gt;まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-a-namesection1導入a&#34;&gt;1. &lt;a name=&#34;section1&#34;&gt;導入&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ここで扱う最適制御問題は，以下の形式をしているものとする．&lt;/p&gt;
&lt;p&gt;$$\underset{x(\cdot), u(\cdot)}{\mathrm{minimize}} \ \ \varphi(x(T)) + \int_0^T L(x(t), u(t)) dt \tag{1}$$
subject to
$$\begin{cases} x(0) - x_0 = 0, &amp;amp; (\text{initial value}) \\ \dot{x}(t) - f(x(t), u(t)) = 0, \ \forall t \in [0, T], &amp;amp; (\text{state equation}) \\ h(x(t), u(t)) \geq 0, \ \forall t \in [0, T], &amp;amp; (\text{path constraints}) \\ r(x(T)) = 0. &amp;amp; (\text{terminal constraints}) \end{cases}$$&lt;/p&gt;
&lt;p&gt;例えば，ロボットがトルクや角度に関する制約を満たしながらある所望の終端状態になるように動作するというものはこのような問題として記述される．&lt;/p&gt;
&lt;h4 id=&#34;11-a-namesection11最適制御のアプローチa&#34;&gt;1.1. &lt;a name=&#34;section1.1&#34;&gt;最適制御のアプローチ&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;最適制御問題の数値解法として，主に以下の3つのアプローチがある&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;．&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Dynamic programming&lt;/li&gt;
&lt;li&gt;Indirect methods&lt;/li&gt;
&lt;li&gt;Direct methods&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;dynamic-programming-動的計画法&#34;&gt;Dynamic programming (動的計画法)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;最適性の原理を使用して任意の時刻$t$および任意の初期状態$x_0$に対するフィードバック制御を再帰的に計算する．&lt;/li&gt;
&lt;li&gt;連続時間の場合，Hamilton-Jacobi-Bellman (HJB) 方程式という状態空間上の偏微分方程式が導かれる．&lt;/li&gt;
&lt;li&gt;近似的に数値計算する方法はあるが，「次元の呪い」によって小さい次元に制限される．&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;indirect-methods-間接法&#34;&gt;Indirect methods (間接法)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;無限次元の最適化の必要条件を使用して，常微分方程式の初期値境界値問題を導出する．&lt;/li&gt;
&lt;li&gt;&amp;ldquo;first optimize, then discretize&amp;rdquo;&lt;/li&gt;
&lt;li&gt;変分法&lt;/li&gt;
&lt;li&gt;初期値境界値問題を解くのが難しい．&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;direct-methods-直接法&#34;&gt;Direct methods (直接法)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;無限次元の最適化問題を有限次元の非線形計画問題に変換し，非線形計画問題を数値的に解く．&lt;/li&gt;
&lt;li&gt;&amp;ldquo;first discretize, then optimize&amp;rdquo;&lt;/li&gt;
&lt;li&gt;制御軌道の有限次元のパラメータ化に基づく．&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実世界への実装ではdirect methodsが広く用いられている．次節でdirect methodsについて簡単にまとめる．&lt;/p&gt;
&lt;h3 id=&#34;2-a-namesection2直接法a&#34;&gt;2. &lt;a name=&#34;section2&#34;&gt;直接法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;直接法は，無限次元の最適制御問題 (1) を有限次元の非線形計画問題 (NLP)
$$\underset{w}{\text{minimize}} \ a(w) \ \ \text{subject to} \  b(w) = 0, \ c(w) \geq 0 \tag{2}$$
に帰着させる方法である．ただし，$w$は最適化の自由度を表す有限次元ベクトル，$a$ は微分可能関数 (スカラー)，$b, c$は微分可能関数 (ベクトル) である． 直接法はまず制御軌道をパラメータ化するが，状態軌道の処理方法は&amp;quot;sequential&amp;quot; approach と &amp;ldquo;simultaneous&amp;rdquo; approachに分けられる．&lt;/p&gt;
&lt;h5 id=&#34;sequential-approach&#34;&gt;Sequential approach&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;状態の軌道$x(t)$は制御入力$u(t)$と初期状態$x_0$の陰関数とみなされる．&lt;/li&gt;
&lt;li&gt;(例) Direct single shooting. ODE solverによるforward simulation.&lt;/li&gt;
&lt;li&gt;Simulationとoptimizationのiterationsは順番に進む．&lt;/li&gt;
&lt;li&gt;離散化された制御入力が得られる．&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;simultaneous-approach&#34;&gt;Simultaneous approach&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;状態の軌道$x(t)$をNLP内の最適化変数として記述し，ODEモデルを表す等式制約を追加する．&lt;/li&gt;
&lt;li&gt;Simulationとoptimizationは同時に進行する．&lt;/li&gt;
&lt;li&gt;制御入力の軌道に対応する状態の軌道がNLPの解として得られる．&lt;/li&gt;
&lt;li&gt;(例) Direct collocation, direct multiple shooting.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;次に，直接法の代表的な3つの手法，(i) direct single shooting, (ii) direct collocation, (iii) direct multiple shooting の考え方についてまとめる．&lt;/p&gt;
&lt;h4 id=&#34;21-a-namesection21direct-single-shootinga&#34;&gt;2.1. &lt;a name=&#34;section2.1&#34;&gt;Direct Single Shooting&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Single shootingではまず，制御入力を離散化する．評価区間$[0, T]$を$0 = t_0 &amp;lt; t_1 &amp;lt; \cdots &amp;lt; t_N = T$の$N$個に分割し，制御入力$u(t)$を
$$u(t) = q_i \ \ \text{for} \ \ t \in [t_i, t_{i + 1}]$$
のようにpiecewise constantになるようにする．つまり，$u(t)$は制御パラメータ$q = (q_0, q_1, \ldots, q_{N - 1})$にのみ依存し，$u(t; q)$と書くことができる．よって，初期値問題
$$x(0) = x_0, \ \dot{x}(t) = f(x(t), u(t; q)), \ \ \forall t \in [0, T]$$
を考え，$t \in [0, T]$における状態$x(t)$を従属変数として$x(t; q)$と表す．Direct single shootingは例えば下の図のように表される．&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-direct-single-shootingの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./direct_single_shooting.png&#34; alt=&#34;fig_1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Direct single shootingの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Semi-infinite problemにならないようにするために，Path constraintsも離散化することを考える．例えば，$h(x(t), u(t)) \geq 0$が点$t_i$でのみ成り立つようにする．&lt;/p&gt;
&lt;p&gt;以上をまとめると，以下のような有限次元の非線形計画問題を得る．&lt;/p&gt;
&lt;p&gt;$$\underset{q}{\text{minimize}} \ \ \varphi(x(T; q)) + \int_0^T L(x(t; q), u(t;q)) dt \tag{3}$$
subject to
$$\begin{cases} h(x(t_i; q), u(t_i; q)) \geq 0, \ \ i = 0, \ldots, N &amp;amp; (\text{discretized path constraints}) \\ r(x(T; q)) = 0 &amp;amp; (\text{terminal constraints}) \end{cases}$$&lt;/p&gt;
&lt;p&gt;この問題は有限次元の最適化ソルバで解くことができる．例えば，&lt;a href=&#34;https://github.com/coin-or/Ipopt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IPOPT&lt;/a&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; (主双対内点法という方法を利用した連続最適化問題を解くライブラリ) などを用いることができる．&lt;/p&gt;
&lt;h5 id=&#34;direct-single-shootingの利点&#34;&gt;Direct single shootingの利点&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;最先端のODEまたはDAEソルバーを使用できること．&lt;/li&gt;
&lt;li&gt;大規模なODEまたはDAEシステムでも最適化の自由度が少ないこと．&lt;/li&gt;
&lt;li&gt;必要なことが制御入力の自由度の初期推定のみであること．&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;direct-single-shootingの欠点&#34;&gt;Direct single shootingの欠点&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;初期化で状態の軌道$x$の知識を使用できない．&lt;/li&gt;
&lt;li&gt;ODEの解$x(t; q)$が$q$の非線形性に依存する可能性がある．&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;実装の容易さなどからsingle shooting approachは工学的応用の観点ではよく用いられる．&lt;/p&gt;
&lt;h4 id=&#34;22-a-namesection22collocationa&#34;&gt;2.2. &lt;a name=&#34;section2.2&#34;&gt;Collocation&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ここでは，collocationの考え方について簡単にまとめる．まず，制御入力と状態を離散化する．特に，制御入力が各$[t_i, t_{i + 1}]$で$q_i$である (piecewise constantである) ように選ぶ．また，点$t_i$における状態が$s_i \approx x(t_i)$であるとする．&lt;/p&gt;
&lt;p&gt;このとき，無限次元のODE
$$\dot{x}(t) - f(x(t), u(t)) = 0, \ \ t \in [0, T]$$
は有限個の等式制約
$$c_i(q_i, s_i, s_i^{\prime}, s_{i + 1}) = 0, \ \ i = 0, \ldots, N - 1$$
に置き換えられる．ただし，$s_i^{\prime}$は区間$[t_i, t_{i + 1}]$中の &amp;ldquo;collocation points&amp;rdquo; における状態の軌道を表すものとする．これらの点の位置を適切に選択することで，高いオーダーでの近似が達成される．通常$s_i^{\prime}$は直交多項式の零点になるように選ばれる．&lt;/p&gt;
&lt;p&gt;ここでは簡単のため，中間変数$s_i^{\prime}$が存在しない場合について述べる．このとき，追加の等式制約は以下のように表される．
$$c(q_i, s_i, s_{i + 1}) := \frac{s_{i + 1} - s_i}{t_{i + 1} - t_i} - f\left( \frac{s_i + s_{i + 1}}{2}, q_i \right).$$&lt;/p&gt;
&lt;p&gt;次に，collocation intervals内の積分を近似する．例えば，
$$l_i(q_i, s_i, s_{i + 1}) := L\left( \frac{s_i + s_{i + 1}}{2}, q_i \right) (t_{i + 1} - t_i) \approx \int_{t_i}^{t_{i + 1}} L(x(t), u(t)) dt$$
のようにする．このような離散化をすると，巨大だがスパースなNLPを得る．&lt;/p&gt;
&lt;p&gt;$$\underset{s, q}{\text{minimize}} \ \ \varphi(s_N) + \sum_{i = 0}^{N - 1} l(q_i, s_i, s_{i + 1})$$
subject to
$$\begin{cases} s_0 - x_0 = 0, &amp;amp; (\text{fixed initial value}) \\ c_i(q_i, s_i, s_{i + 1}) = 0, \ i = 0, \ldots, N - 1, &amp;amp; (\text{discretized ODE model}) \\ h(s_i, q_i) = 0, \ i = 0, \ldots, N, &amp;amp; (\text{discretized path constraints}) \\ r(s_N) = 0. &amp;amp; (\text{terminal constraints}) \end{cases}$$&lt;/p&gt;
&lt;p&gt;この問題は内点法を用いたソルバで解くことができる．効率的なNLPの手法では通常，反復が実行可能に保たれないので，離散化されたODE modelの方程式はNLPの解でのみ満たされる．つまり，simulationとoptimizationが同時に進行する．&lt;/p&gt;
&lt;h5 id=&#34;collocation-methodsの利点&#34;&gt;Collocation methodsの利点&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;非常にスパースなNLPが得られること．&lt;/li&gt;
&lt;li&gt;初期化で状態軌道$x$の知識を使用できること．&lt;/li&gt;
&lt;li&gt;局所収束が高速であること．&lt;/li&gt;
&lt;li&gt;不安定なシステムを扱うことができること．&lt;/li&gt;
&lt;li&gt;状態と終端制約の処理が容易であること．&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;collocation-methodsの欠点&#34;&gt;Collocation methodsの欠点&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;離散化の誤差を適応的に制御しようとすると，再度grid化を行う必要があり，NLPの次元を変更する必要があること．
&lt;ul&gt;
&lt;li&gt;そのため，collocationのapplicationでは適切な離散化誤差の制御の問題に対処しないことがよくある．&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Collocation methodsは実用的な最適制御問題にも使われている．&lt;/p&gt;
&lt;h4 id=&#34;23-a-namesection23direct-multiple-shootinga&#34;&gt;2.3. &lt;a name=&#34;section2.3&#34;&gt;Direct Multiple Shooting&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Direct multiple shooting methodは，simultaneous method (e.g. collocation) とsingle shootingの利点を組み合わせ，adaptive, error controlled ODE solversを使えるようにしたものである．&lt;/p&gt;
&lt;p&gt;まず，制御入力を
$$u(t) = q_i \ \ \text{for} \ \ t \in [t_i, t_{i + 1}]$$
のようにpicewise constantになるようにする．ただし，$t_i$と$t_{i + 1}$の間隔はsingle shootingと同じになるようにする．&lt;/p&gt;
&lt;p&gt;次に，各時間区間$[t_i, t_{i + 1}]$において独立に，人工的な初期値$s_i$からODEを解く．
$$\dot{x}_i(t) = f(x_i(t), q_i), \ \ t \in [t_i, t_{i + 1}],$$
$$x_i(t_i) = s_i.$$
ここまでで得られる制御入力と軌道は，例えば下の図のようになる．
















&lt;figure  id=&#34;figure-direct-multiple-shootingの例&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./direct_multiple_shooting.png&#34; alt=&#34;fig_2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Direct Multiple Shootingの例
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;この初期値問題を数値的に解くことによって，軌道$x(t; s_i, q_i)$を得る．このODEの解の計算と同時に積分
$$l_i(s_i, q_i) := \int_{t_i}^{t_{i + 1}} L(x_i(t_i; s_i, q_i)) dt$$
を数値的に計算する．&lt;/p&gt;
&lt;p&gt;人工的な変数$s_i$を物理的に意味のある値に拘束するために，連続性の条件
$$s_{i + 1} = x_i(t_{i + 1}; s_i, q_i)$$
を課す．このようにして，single shootingで得られたNLPと等価でありながら，余剰の変数$s_i$を含み，block sparse structureを持つNLPの定式化を得る．&lt;/p&gt;
&lt;p&gt;$$\underset{s, q}{\text{minimize}} \ \ \varphi(s_N) + \sum_{i = 0}^{N - 1} l_i(s_i, q_i) \tag{4}$$
subject to
$$\begin{cases} s_0 - x_0 = 0, &amp;amp; (\text{initial value}) \\ s_{i + 1} - x_i(t_{i + 1}; s_i, q_i) = 0, \ \ i = 0, \ldots, N - 1, &amp;amp; (\text{continuity}) \\ h(s_i, q_i) \geq 0, \ \ i = 0, \ldots, N, &amp;amp; (\text{discretized path constraints}) \\ r(s_N) = 0. &amp;amp; (\text{terminal constraints}) \end{cases}$$&lt;/p&gt;
&lt;p&gt;すべての変数を$w := (s_0, q_0, s_1, q_1, \ldots, s_N)$とまとめると，(2)の形式のNLPを得る．&lt;/p&gt;
&lt;p&gt;Direct multiple shootingは，sequential methodとsimultaneous methodの利点を両方持つ．オフラインの最適制御問題の数値計算の他，オンライン最適化やMPCにも応用されている．&lt;/p&gt;
&lt;h3 id=&#34;3-a-namesection3実装a&#34;&gt;3. &lt;a name=&#34;section3&#34;&gt;実装&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以下の例題を数値的に解く．
$$\underset{x(\cdot) \in \mathbb{R}^2, u(\cdot) \in \mathbb{R}}{\text{minimize}} \ \ \int_0^T (x_1^2 + x_2^2 + u^2) dt$$
subject to
$$\begin{cases} x(0) = x_0, &amp;amp; (\text{initial value}) \\ \dot{x}_0 = (1 - x_1^2)x_0 - x_1 + u, \ \ \dot{x}_1 = x_0 \ \ t \in [0, T], &amp;amp; (\text{state equation})  \\ x_1 \geq -0.25, |u(t)| \leq 1, \ \ t \in [0, T], &amp;amp; (\text{bounds}) \end{cases}$$
初期値を$x_0 = [0, 1]^{\mathrm{T}}$とし，$T = 10, N = 20$とする．&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://web.casadi.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CasADi&lt;/a&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; を用いてdirect single shooting methodを実装した．実装したコードは&lt;a href=&#34;https://tachibana-ai.netlify.app/post/optimal_control_direct_method/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最適制御問題: 直接法 (プログラム)&lt;/a&gt; に載せている．&lt;/p&gt;
&lt;p&gt;実行後得られた最適制御および状態を以下に示す．&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-得られた最適制御と状態&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./direct_single_shooting_2_3.svg&#34; alt=&#34;fig_3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      得られた最適制御と状態
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;4a-namesection4手書きメモa&#34;&gt;4.&lt;a name=&#34;section4&#34;&gt;手書きメモ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;非線形最適制御問題入門&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;の7章では，最適制御問題の数値解法がいくつか紹介されている．&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数値解法&lt;/th&gt;
&lt;th&gt;長所&lt;/th&gt;
&lt;th&gt;短所&lt;/th&gt;
&lt;th&gt;適する用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;勾配法&lt;/td&gt;
&lt;td&gt;$H$の高階導関数が不要&lt;/td&gt;
&lt;td&gt;最適解近傍での収束が遅い&lt;/td&gt;
&lt;td&gt;最適解のおおよその様子を手軽に知りたいとき&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;シューティング法&lt;/td&gt;
&lt;td&gt;未知量が有限次元&lt;/td&gt;
&lt;td&gt;計算が発散しやすい&lt;/td&gt;
&lt;td&gt;良好な初期推定解が選べるとき&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;入力関数のニュートン法&lt;/td&gt;
&lt;td&gt;最適解近傍での収束が速い&lt;/td&gt;
&lt;td&gt;$H$の2階偏導関数が必要で，各反復での計算量が多い&lt;/td&gt;
&lt;td&gt;最適解を精度よく求めたいとき&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;動的計画法&lt;/td&gt;
&lt;td&gt;状態フィードバック制御が得られる&lt;/td&gt;
&lt;td&gt;状態の次元が高いと記憶量が膨大&lt;/td&gt;
&lt;td&gt;状態の次元が低いか，狭い範囲だけ考慮すればよいとき&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下に手書きメモを掲載する．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tachibana-ai.netlify.app/files/optimal_control/Sec7.1.pdf&#34; target=&#34;_blank&#34;&gt;7.1節&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tachibana-ai.netlify.app/files/optimal_control/Sec7.2.pdf&#34; target=&#34;_blank&#34;&gt;7.2節&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tachibana-ai.netlify.app/files/optimal_control/Sec7.3.pdf&#34; target=&#34;_blank&#34;&gt;7.3節&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tachibana-ai.netlify.app/files/optimal_control/Sec7.4-7.6.pdf&#34; target=&#34;_blank&#34;&gt;7.4 - 7.6節&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5a-namesection5まとめa&#34;&gt;5.&lt;a name=&#34;section5&#34;&gt;まとめ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この記事では，最適制御の数値解法について簡単にまとめ，例題を数値的に解いた．理解が間違えている箇所があるかもしれないので，もう一度確認したいと思っている．&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;M. Diehl, et al., &amp;ldquo;&lt;a href=&#34;https://www.researchgate.net/publication/29603798_Fast_Direct_Multiple_Shooting_Algorithms_for_Optimal_Robot_Control&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fast direct multiple shooting algorithms for optimal robot control&lt;/a&gt;,&amp;rdquo; Fast motions in biomechanics and robotics, pp. 66-93, Springer, 2006.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;A. Wächter and L. T. Biegler, &amp;ldquo;&lt;a href=&#34;https://link.springer.com/article/10.1007%2Fs10107-004-0559-y&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;On the Implementation of a Primal-Dual Interior Point Filter Line Search Algorithm for Large-Scale Nonlinear Programming&lt;/a&gt;,&amp;rdquo; Mathematical Programming vol. 106, no. 1, pp. 25-57, 2006 (&lt;a href=&#34;http://www.optimization-online.org/DB_HTML/2004/03/836.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;preprint&lt;/a&gt;)&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;J. A. E.Andersson, et al, &amp;ldquo;&lt;a href=&#34;https://link.springer.com/article/10.1007/s12532-018-0139-4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CasADi - A software framework for nonlinear optimization and potimal control&lt;/a&gt;,&amp;rdquo; Mathematical Programming Computation, In Press, 2018.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;大塚，&lt;a href=&#34;https://www.coronasha.co.jp/np/isbn/9784339033182/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;非線形最適制御問題入門&lt;/a&gt;，コロナ社，2011.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Python3の開発環境をDocker containerとして作る</title>
      <link>https://tachibana-ai.netlify.app/post/docker_python/</link>
      <pubDate>Thu, 08 Jul 2021 18:58:51 +0900</pubDate>
      <guid>https://tachibana-ai.netlify.app/post/docker_python/</guid>
      <description>&lt;h3 id=&#34;0-はじめに&#34;&gt;0. はじめに&lt;/h3&gt;
&lt;p&gt;この記事では，Docker containerとしてPythonの開発環境を作ったときのメモを残す．
この記事の内容は，GitHubのサブのアカウントの&lt;a href=&#34;https://github.com/tcbn-ai/Docker_python_env&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;publicリポジトリ&lt;/a&gt;で公開している．&lt;/p&gt;
&lt;h3 id=&#34;1-必要なもの&#34;&gt;1. 必要なもの&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Docker Engineのインストール&lt;/li&gt;
&lt;li&gt;VSCodeのインストール
&lt;ul&gt;
&lt;li&gt;Remote Developementの導入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-基本構成&#34;&gt;2. 基本構成&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Docker Image
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/python&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;python&lt;/a&gt;の&lt;a href=&#34;https://github.com/docker-library/python/blob/e0e01b8482ea14352c710134329cdd93ece88317/3.8/buster/Dockerfile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;3.8.10-buster&lt;/a&gt;を使っている．&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ディレクトリ構成
&lt;pre&gt;&lt;code&gt;|- test_code/   # コードを置いている
|- .devcontainer/
    |- devcontainer.json
    |- docker-compose.yml
    |- dockerfile
    |- requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;各種ファイル&#34;&gt;各種ファイル&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;devcontainer.json&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;VSCodeのRemoteを使うときの設定
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.177.0/containers/docker-existing-dockerfile
{
  // 名前は任意
  &amp;quot;name&amp;quot;: &amp;quot;Docker-Python&amp;quot;,
  // dockercomposefileの場所 (同階層に置いている)
  &amp;quot;dockerComposeFile&amp;quot;: &amp;quot;docker-compose.yml&amp;quot;,
  // 使う拡張機能
  &amp;quot;extensions&amp;quot;: [
    &amp;quot;ms-python.python&amp;quot;
  ],
  // ここに記載している&amp;quot;service&amp;quot;名とdocker-compose.ymlに記載している&amp;quot;service&amp;quot;を一致させる
  &amp;quot;service&amp;quot;: &amp;quot;python&amp;quot;,
  // コンテナ内に入ったときのworkdir
  &amp;quot;workspaceFolder&amp;quot;: &amp;quot;/code&amp;quot;,
  // VSCodeを閉じたときのアクション
  &amp;quot;shutdownAction&amp;quot;: &amp;quot;stopCompose&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;複数のコンテナを定義し，実行することができる．&lt;/li&gt;
&lt;li&gt;今回は，1つのコンテナに対する処理を記述
&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: &amp;quot;3&amp;quot;    # 3が最新版
services: 
    python: # ここの名前とdevcontainer.jsonの&amp;quot;service&amp;quot;を一致させる
        build: .    # 同階層のdockerfileからビルドする
        command: sleep infinity
        volumes: 
            - ../:/code  # 上階層のディレクトリをDocker Container上のworkdirにマウント
        environment: 
            SHELL: /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dockerfile&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;コンテナを作るための処理
&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;########### Image file ###########
FROM python:3.8.10-buster
##################################

########### update and install packages ###########
# apt-get upgradeに-yを付けないとexit 1になります．追加しました．(5/23)
RUN apt-get update &amp;amp;&amp;amp; \
    apt-get -y upgrade &amp;amp;&amp;amp; \
    apt-get install -y vim git &amp;amp;&amp;amp; \
    rm -rf /var/lib/apt/lists*
###################################################

########### create workspace ###########
RUN mkdir /code
WORKDIR /code
ADD ./requirements.txt /code/
########################################

########### install packages via pip ###########
RUN pip3 install -r requirements.txt
ADD . /code/
################################################
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requirements.txt&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install&lt;/code&gt;するファイル
&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;############ Requirements Packages ############
pylint
numpy
scipy
sympy
matplotlib
statsmodels
sklearn
pandas
networkx
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-使用時&#34;&gt;3. 使用時&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;test_code&lt;/code&gt;と同階層に自分のコードを格納したフォルダを配置して，VSCodeの左下の&amp;quot;Open Remote Window&amp;quot;を選択．&lt;/li&gt;
&lt;li&gt;Reopen in Containerを選択．&lt;/li&gt;
&lt;li&gt;ワークスペースが開いたら，terminalを開き，&lt;code&gt;python *.py&lt;/code&gt;で実行する．&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-いろいろ変えたいとき&#34;&gt;4. いろいろ変えたいとき&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install&lt;/code&gt;するパッケージを変更したいとき
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;requirements.txt&lt;/code&gt;を書き換える&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pythonのバージョンを3の別バージョンに変えたいとき
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dockerfile&lt;/code&gt;のイメージファイル (2行目の&lt;code&gt;FROM&lt;/code&gt;以下) を書き換える．&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pythonのバージョンを2にしたいとき
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/python&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;python&lt;/a&gt;には2系がないので，イメージファイルをUbuntu等にして1からインストールする．&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
